/*
 * Api documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package project.grp3.simulator.core.api.fire.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import project.grp3.simulator.core.api.fire.model.GenericError;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * Forbidden
 */


public class Forbidden {
  @SerializedName("name")
  private String name = "FORBIDDEN";

  @SerializedName("message")
  private String message = null;

  @SerializedName("status")
  private BigDecimal status = null;

  @SerializedName("errors")
  private List<GenericError> errors = null;

  @SerializedName("stack")
  private List<String> stack = null;

  public Forbidden name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The error name
   * @return name
  **/
  @Schema(example = "FORBIDDEN", required = true, description = "The error name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Forbidden message(String message) {
    this.message = message;
    return this;
  }

   /**
   * An error message
   * @return message
  **/
  @Schema(required = true, description = "An error message")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Forbidden status(BigDecimal status) {
    this.status = status;
    return this;
  }

   /**
   * The status code of the exception
   * @return status
  **/
  @Schema(example = "403.0", required = true, description = "The status code of the exception")
  public BigDecimal getStatus() {
    return status;
  }

  public void setStatus(BigDecimal status) {
    this.status = status;
  }

  public Forbidden errors(List<GenericError> errors) {
    this.errors = errors;
    return this;
  }

  public Forbidden addErrorsItem(GenericError errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * A list of related errors
   * @return errors
  **/
  @Schema(description = "A list of related errors")
  public List<GenericError> getErrors() {
    return errors;
  }

  public void setErrors(List<GenericError> errors) {
    this.errors = errors;
  }

  public Forbidden stack(List<String> stack) {
    this.stack = stack;
    return this;
  }

  public Forbidden addStackItem(String stackItem) {
    if (this.stack == null) {
      this.stack = new ArrayList<>();
    }
    this.stack.add(stackItem);
    return this;
  }

   /**
   * The stack trace (only in development mode)
   * @return stack
  **/
  @Schema(description = "The stack trace (only in development mode)")
  public List<String> getStack() {
    return stack;
  }

  public void setStack(List<String> stack) {
    this.stack = stack;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Forbidden forbidden = (Forbidden) o;
    return Objects.equals(this.name, forbidden.name) &&
        Objects.equals(this.message, forbidden.message) &&
        Objects.equals(this.status, forbidden.status) &&
        Objects.equals(this.errors, forbidden.errors) &&
        Objects.equals(this.stack, forbidden.stack);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, message, status, errors, stack);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Forbidden {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    stack: ").append(toIndentedString(stack)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}