/*
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package project.grp3.simulator.core.api.emergency.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Fireman
 */


public class Fireman
{
    @SerializedName("id")
    private Long id = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("lastname")
    private String lastname = null;

    @SerializedName("exhaustLevel")
    private ExhaustLevel exhaustLevel = null;

    @SerializedName("barrackId")
    private Long barrackId = null;

    public Fireman id(Long id)
    {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public Long getId()
    {
        return id;
    }

    public void setId(Long id)
    {
        this.id = id;
    }

    public Fireman name(String name)
    {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public Fireman lastname(String lastname)
    {
        this.lastname = lastname;
        return this;
    }

    /**
     * Get lastname
     *
     * @return lastname
     **/
    @Schema(description = "")
    public String getLastname()
    {
        return lastname;
    }

    public void setLastname(String lastname)
    {
        this.lastname = lastname;
    }

    public Fireman exhaustLevel(ExhaustLevel exhaustLevel)
    {
        this.exhaustLevel = exhaustLevel;
        return this;
    }

    /**
     * Get exhaustLevel
     *
     * @return exhaustLevel
     **/
    @Schema(description = "")
    public ExhaustLevel getExhaustLevel()
    {
        return exhaustLevel;
    }

    public void setExhaustLevel(ExhaustLevel exhaustLevel)
    {
        this.exhaustLevel = exhaustLevel;
    }

    public Fireman barrackId(Long barrackId)
    {
        this.barrackId = barrackId;
        return this;
    }

    /**
     * Get barrackId
     *
     * @return barrackId
     **/
    @Schema(description = "")
    public Long getBarrackId()
    {
        return barrackId;
    }

    public void setBarrackId(Long barrackId)
    {
        this.barrackId = barrackId;
    }


    @Override
    public boolean equals(java.lang.Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        Fireman fireman = (Fireman) o;
        return Objects.equals(this.id, fireman.id) &&
                Objects.equals(this.name, fireman.name) &&
                Objects.equals(this.lastname, fireman.lastname) &&
                Objects.equals(this.exhaustLevel, fireman.exhaustLevel) &&
                Objects.equals(this.barrackId, fireman.barrackId);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(id, name, lastname, exhaustLevel, barrackId);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class Fireman {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
        sb.append("    exhaustLevel: ").append(toIndentedString(exhaustLevel)).append("\n");
        sb.append("    barrackId: ").append(toIndentedString(barrackId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}